"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import pyatv.protocols.mrp.protobuf.DeviceInfoMessage_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Origin(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Origin._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Unknown: Origin._Type.ValueType  # 0
        Local: Origin._Type.ValueType  # 1
        Custom: Origin._Type.ValueType  # 2
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    Unknown: Origin.Type.ValueType  # 0
    Local: Origin.Type.ValueType  # 1
    Custom: Origin.Type.ValueType  # 2

    TYPE_FIELD_NUMBER: builtins.int
    DISPLAYNAME_FIELD_NUMBER: builtins.int
    IDENTIFIER_FIELD_NUMBER: builtins.int
    DEVICEINFO_FIELD_NUMBER: builtins.int
    type: global___Origin.Type.ValueType
    displayName: typing.Text
    identifier: builtins.int
    @property
    def deviceInfo(self) -> pyatv.protocols.mrp.protobuf.DeviceInfoMessage_pb2.DeviceInfoMessage: ...
    def __init__(self,
        *,
        type: typing.Optional[global___Origin.Type.ValueType] = ...,
        displayName: typing.Optional[typing.Text] = ...,
        identifier: typing.Optional[builtins.int] = ...,
        deviceInfo: typing.Optional[pyatv.protocols.mrp.protobuf.DeviceInfoMessage_pb2.DeviceInfoMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["deviceInfo",b"deviceInfo","displayName",b"displayName","identifier",b"identifier","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["deviceInfo",b"deviceInfo","displayName",b"displayName","identifier",b"identifier","type",b"type"]) -> None: ...
global___Origin = Origin
