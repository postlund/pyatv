# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pyatv/protocols/mrp/protobuf/UpdateOutputDeviceMessage.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pyatv.protocols.mrp.protobuf import ProtocolMessage_pb2 as pyatv_dot_protocols_dot_mrp_dot_protobuf_dot_ProtocolMessage__pb2
from pyatv.protocols.mrp.protobuf import Common_pb2 as pyatv_dot_protocols_dot_mrp_dot_protobuf_dot_Common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n<pyatv/protocols/mrp/protobuf/UpdateOutputDeviceMessage.proto\x1a\x32pyatv/protocols/mrp/protobuf/ProtocolMessage.proto\x1a)pyatv/protocols/mrp/protobuf/Common.proto\"U\n\x18\x41VOutputDeviceSourceInfo\x12\x19\n\x11routingContextUID\x18\x01 \x01(\t\x12\x1e\n\x16multipleBuiltInDevices\x18\x02 \x01(\x08\"\xf5\x0f\n\x18\x41VOutputDeviceDescriptor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x18\n\x10uniqueIdentifier\x18\x02 \x01(\t\x12\x0f\n\x07groupID\x18\x03 \x01(\t\x12\x0f\n\x07modelID\x18\x04 \x01(\t\x12\x12\n\nmacAddress\x18\x05 \x01(\x0c\x12\x1d\n\x15\x63\x61nAccessRemoteAssets\x18\x06 \x01(\x08\x12\x1c\n\x14isRemoteControllable\x18\x07 \x01(\x08\x12\x15\n\risGroupLeader\x18\x08 \x01(\x08\x12\x13\n\x0bisGroupable\x18\t \x01(\x08\x12$\n\ndeviceType\x18\n \x01(\x0e\x32\x10.DeviceType.Enum\x12*\n\rdeviceSubType\x18\x0b \x01(\x0e\x32\x13.DeviceSubType.Enum\x12\x1d\n\x15modelSpecificInfoData\x18\x0c \x01(\x0c\x12\x14\n\x0c\x62\x61tteryLevel\x18\r \x01(\x02\x12\x15\n\risLocalDevice\x18\x0e \x01(\x08\x12\x1e\n\x16supportsExternalScreen\x18\x0f \x01(\x08\x12\x1d\n\x15requiresAuthorization\x18\x10 \x01(\x08\x12(\n shouldForceRemoteControlabillity\x18\x11 \x01(\x08\x12-\n\nsourceInfo\x18\x12 \x01(\x0b\x32\x19.AVOutputDeviceSourceInfo\x12\x19\n\x11isDeviceGroupable\x18\x13 \x01(\x08\x12$\n\x1c\x63\x61nRelayCommunicationChannel\x18\x14 \x01(\x08\x12\x17\n\x0flogicalDeviceID\x18\x15 \x01(\t\x12\x1a\n\x12isProxyGroupPlayer\x18\x16 \x01(\x08\x12\x17\n\x0f\x66irmwareVersion\x18\x17 \x01(\t\x12\x0e\n\x06volume\x18\x18 \x01(\x02\x12 \n\x18isVolumeControlAvailable\x18\x19 \x01(\x08\x12\x1b\n\x13\x63\x61nAccessAppleMusic\x18\x1a \x01(\x08\x12#\n\x1b\x63\x61nAccessiCloudMusicLibrary\x18\x1b \x01(\x08\x12 \n\x18groupContainsGroupLeader\x18\x1c \x01(\x08\x12\x1f\n\x17supportsBufferedAirPlay\x18\x1d \x01(\x08\x12\x31\n)canPlayEncryptedProgressiveDownloadAssets\x18\x1e \x01(\x08\x12#\n\x1b\x63\x61nFetchMediaDataFromSender\x18\x1f \x01(\x08\x12\x46\n>resentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets\x18  \x01(\x08\x12&\n\x1eisAirPlayReceiverSessionActive\x18! \x01(\x08\x12\x1d\n\x15parentGroupIdentifier\x18\" \x01(\t\x12-\n%parentGroupContainsDiscoverableLeader\x18# \x01(\x08\x12\x18\n\x10isAddedToHomeKit\x18$ \x01(\x08\x12\x1a\n\x12volumeCapabilities\x18% \x01(\x05\x12\x13\n\x0b\x62luetoothID\x18& \x01(\t\x12\x13\n\x0bsupportsHAP\x18\' \x01(\x08\x12\x19\n\x11usingJSONProtocol\x18( \x01(\x08\x12\x36\n\x13\x63lusterCompositions\x18) \x03(\x0b\x32\x19.AVOutputDeviceDescriptor\x12\x13\n\x0b\x63lusterType\x18* \x01(\r\x12\x12\n\nprimaryUID\x18+ \x01(\t\x12\x1d\n\x15\x63onfiguredClusterSize\x18, \x01(\r\x12-\n%supportsRapportRemoteControlTransport\x18- \x01(\x08\x12%\n\x1d\x63urrentBluetoothListeningMode\x18. \x01(\t\x12(\n availableBluetoothListeningModes\x18/ \x03(\t\x12\x1b\n\x13supportsMultiplayer\x18\x30 \x03(\x08\x12 \n\x18producesLowFidelityAudio\x18\x31 \x01(\x08\x12\x17\n\x0fhostDeviceClass\x18\x32 \x01(\x05\x12\x16\n\x0e\x61irPlayGroupID\x18\x33 \x01(\t\x12 \n\x18supportsSharePlayHandoff\x18\x34 \x01(\x08\x12\x10\n\x08\x64istance\x18\x35 \x01(\x02\x12\x1d\n\x15\x64iscoveredOnSameInfra\x18\x36 \x01(\x08\x12:\n\x17\x61\x63tivatedClusterMembers\x18\x37 \x03(\x0b\x32\x19.AVOutputDeviceDescriptor\x12\x10\n\x08pickable\x18\x38 \x03(\x08\x12\x15\n\rtransportType\x18\x39 \x01(\x05\x12\x11\n\tclusterID\x18: \x01(\t\x12\x17\n\x0fisClusterLeader\x18; \x01(\x08\x12\x18\n\x10isAppleAccessory\x18< \x01(\x08\x12\x1e\n\x16parentUniqueIdentifier\x18= \x01(\t\x12\x0e\n\x06roomID\x18> \x01(\t\x12\x10\n\x08roomName\x18? \x01(\t\x12\x34\n\x11\x61llClusterMembers\x18@ \x03(\x0b\x32\x19.AVOutputDeviceDescriptor\x12\x1f\n\x17\x65ngageOnClusterActivate\x18\x43 \x01(\x08\"\xa0\x01\n\x19UpdateOutputDeviceMessage\x12\x30\n\routputDevices\x18\x01 \x03(\x0b\x32\x19.AVOutputDeviceDescriptor\x12\x13\n\x0b\x65ndpointUID\x18\x02 \x01(\t\x12<\n\x19\x63lusterAwareOutputDevices\x18\x03 \x03(\x0b\x32\x19.AVOutputDeviceDescriptor:O\n\x19updateOutputDeviceMessage\x12\x10.ProtocolMessage\x18\x45 \x01(\x0b\x32\x1a.UpdateOutputDeviceMessage')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'pyatv.protocols.mrp.protobuf.UpdateOutputDeviceMessage_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  pyatv_dot_protocols_dot_mrp_dot_protobuf_dot_ProtocolMessage__pb2.ProtocolMessage.RegisterExtension(updateOutputDeviceMessage)

  DESCRIPTOR._options = None
  _globals['_AVOUTPUTDEVICESOURCEINFO']._serialized_start=159
  _globals['_AVOUTPUTDEVICESOURCEINFO']._serialized_end=244
  _globals['_AVOUTPUTDEVICEDESCRIPTOR']._serialized_start=247
  _globals['_AVOUTPUTDEVICEDESCRIPTOR']._serialized_end=2284
  _globals['_UPDATEOUTPUTDEVICEMESSAGE']._serialized_start=2287
  _globals['_UPDATEOUTPUTDEVICEMESSAGE']._serialized_end=2447
# @@protoc_insertion_point(module_scope)
