# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FieldDescriptor as google___protobuf___descriptor___FieldDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from pyatv.mrp.protobuf.NowPlayingInfo_pb2 import (
    NowPlayingInfo as pyatv___mrp___protobuf___NowPlayingInfo_pb2___NowPlayingInfo,
)

from pyatv.mrp.protobuf.PlaybackQueueCapabilities_pb2 import (
    PlaybackQueueCapabilities as pyatv___mrp___protobuf___PlaybackQueueCapabilities_pb2___PlaybackQueueCapabilities,
)

from pyatv.mrp.protobuf.PlaybackQueueRequestMessage_pb2 import (
    PlaybackQueueRequestMessage as pyatv___mrp___protobuf___PlaybackQueueRequestMessage_pb2___PlaybackQueueRequestMessage,
)

from pyatv.mrp.protobuf.PlaybackQueue_pb2 import (
    PlaybackQueue as pyatv___mrp___protobuf___PlaybackQueue_pb2___PlaybackQueue,
)

from pyatv.mrp.protobuf.PlayerPath_pb2 import (
    PlayerPath as pyatv___mrp___protobuf___PlayerPath_pb2___PlayerPath,
)

from pyatv.mrp.protobuf.SupportedCommands_pb2 import (
    SupportedCommands as pyatv___mrp___protobuf___SupportedCommands_pb2___SupportedCommands,
)

from typing import (
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


class SetStateMessage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class PlaybackState(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(cls, name: builtin___str) -> 'SetStateMessage.PlaybackState': ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(cls) -> typing___List['SetStateMessage.PlaybackState']: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[builtin___str, 'SetStateMessage.PlaybackState']]: ...
        Unknown = typing___cast('SetStateMessage.PlaybackState', 0)
        Playing = typing___cast('SetStateMessage.PlaybackState', 1)
        Paused = typing___cast('SetStateMessage.PlaybackState', 2)
        Stopped = typing___cast('SetStateMessage.PlaybackState', 3)
        Interrupted = typing___cast('SetStateMessage.PlaybackState', 4)
        Seeking = typing___cast('SetStateMessage.PlaybackState', 5)
    Unknown = typing___cast('SetStateMessage.PlaybackState', 0)
    Playing = typing___cast('SetStateMessage.PlaybackState', 1)
    Paused = typing___cast('SetStateMessage.PlaybackState', 2)
    Stopped = typing___cast('SetStateMessage.PlaybackState', 3)
    Interrupted = typing___cast('SetStateMessage.PlaybackState', 4)
    Seeking = typing___cast('SetStateMessage.PlaybackState', 5)

    displayID = ... # type: typing___Text
    displayName = ... # type: typing___Text
    playbackState = ... # type: SetStateMessage.PlaybackState
    playbackStateTimestamp = ... # type: builtin___float

    @property
    def nowPlayingInfo(self) -> pyatv___mrp___protobuf___NowPlayingInfo_pb2___NowPlayingInfo: ...

    @property
    def supportedCommands(self) -> pyatv___mrp___protobuf___SupportedCommands_pb2___SupportedCommands: ...

    @property
    def playbackQueue(self) -> pyatv___mrp___protobuf___PlaybackQueue_pb2___PlaybackQueue: ...

    @property
    def playbackQueueCapabilities(self) -> pyatv___mrp___protobuf___PlaybackQueueCapabilities_pb2___PlaybackQueueCapabilities: ...

    @property
    def playerPath(self) -> pyatv___mrp___protobuf___PlayerPath_pb2___PlayerPath: ...

    @property
    def request(self) -> pyatv___mrp___protobuf___PlaybackQueueRequestMessage_pb2___PlaybackQueueRequestMessage: ...

    def __init__(self,
        *,
        nowPlayingInfo : typing___Optional[pyatv___mrp___protobuf___NowPlayingInfo_pb2___NowPlayingInfo] = None,
        supportedCommands : typing___Optional[pyatv___mrp___protobuf___SupportedCommands_pb2___SupportedCommands] = None,
        playbackQueue : typing___Optional[pyatv___mrp___protobuf___PlaybackQueue_pb2___PlaybackQueue] = None,
        displayID : typing___Optional[typing___Text] = None,
        displayName : typing___Optional[typing___Text] = None,
        playbackState : typing___Optional[SetStateMessage.PlaybackState] = None,
        playbackQueueCapabilities : typing___Optional[pyatv___mrp___protobuf___PlaybackQueueCapabilities_pb2___PlaybackQueueCapabilities] = None,
        playerPath : typing___Optional[pyatv___mrp___protobuf___PlayerPath_pb2___PlayerPath] = None,
        request : typing___Optional[pyatv___mrp___protobuf___PlaybackQueueRequestMessage_pb2___PlaybackQueueRequestMessage] = None,
        playbackStateTimestamp : typing___Optional[builtin___float] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SetStateMessage: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> SetStateMessage: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"displayID",b"displayID",u"displayName",b"displayName",u"nowPlayingInfo",b"nowPlayingInfo",u"playbackQueue",b"playbackQueue",u"playbackQueueCapabilities",b"playbackQueueCapabilities",u"playbackState",b"playbackState",u"playbackStateTimestamp",b"playbackStateTimestamp",u"playerPath",b"playerPath",u"request",b"request",u"supportedCommands",b"supportedCommands"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"displayID",b"displayID",u"displayName",b"displayName",u"nowPlayingInfo",b"nowPlayingInfo",u"playbackQueue",b"playbackQueue",u"playbackQueueCapabilities",b"playbackQueueCapabilities",u"playbackState",b"playbackState",u"playbackStateTimestamp",b"playbackStateTimestamp",u"playerPath",b"playerPath",u"request",b"request",u"supportedCommands",b"supportedCommands"]) -> None: ...

setStateMessage = ... # type: google___protobuf___descriptor___FieldDescriptor
