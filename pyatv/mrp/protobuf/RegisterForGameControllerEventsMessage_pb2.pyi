# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FieldDescriptor as google___protobuf___descriptor___FieldDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    List as typing___List,
    Optional as typing___Optional,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


class RegisterForGameControllerEventsMessage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class InputModeFlags(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(cls, name: builtin___str) -> 'RegisterForGameControllerEventsMessage.InputModeFlags': ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(cls) -> typing___List['RegisterForGameControllerEventsMessage.InputModeFlags']: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[builtin___str, 'RegisterForGameControllerEventsMessage.InputModeFlags']]: ...
        Motion = typing___cast('RegisterForGameControllerEventsMessage.InputModeFlags', 1)
        Buttons = typing___cast('RegisterForGameControllerEventsMessage.InputModeFlags', 2)
        Digitizer = typing___cast('RegisterForGameControllerEventsMessage.InputModeFlags', 3)
    Motion = typing___cast('RegisterForGameControllerEventsMessage.InputModeFlags', 1)
    Buttons = typing___cast('RegisterForGameControllerEventsMessage.InputModeFlags', 2)
    Digitizer = typing___cast('RegisterForGameControllerEventsMessage.InputModeFlags', 3)

    inputModeFlags = ... # type: RegisterForGameControllerEventsMessage.InputModeFlags

    def __init__(self,
        *,
        inputModeFlags : typing___Optional[RegisterForGameControllerEventsMessage.InputModeFlags] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> RegisterForGameControllerEventsMessage: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> RegisterForGameControllerEventsMessage: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"inputModeFlags",b"inputModeFlags"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"inputModeFlags",b"inputModeFlags"]) -> None: ...

registerForGameControllerEventsMessage = ... # type: google___protobuf___descriptor___FieldDescriptor
