# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from pyatv.mrp.protobuf.DeviceInfoMessage_pb2 import (
    DeviceInfoMessage as pyatv___mrp___protobuf___DeviceInfoMessage_pb2___DeviceInfoMessage,
)

from typing import (
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Origin(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Type(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> Origin.Type: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[Origin.Type]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, Origin.Type]]: ...
        Unknown = typing___cast(Origin.Type, 0)
        Local = typing___cast(Origin.Type, 1)
        Custom = typing___cast(Origin.Type, 2)
    Unknown = typing___cast(Origin.Type, 0)
    Local = typing___cast(Origin.Type, 1)
    Custom = typing___cast(Origin.Type, 2)

    type = ... # type: Origin.Type
    displayName = ... # type: typing___Text
    identifier = ... # type: int

    @property
    def deviceInfo(self) -> pyatv___mrp___protobuf___DeviceInfoMessage_pb2___DeviceInfoMessage: ...

    def __init__(self,
        *,
        type : typing___Optional[Origin.Type] = None,
        displayName : typing___Optional[typing___Text] = None,
        identifier : typing___Optional[int] = None,
        deviceInfo : typing___Optional[pyatv___mrp___protobuf___DeviceInfoMessage_pb2___DeviceInfoMessage] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Origin: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"deviceInfo",u"displayName",u"identifier",u"type"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"deviceInfo",u"displayName",u"identifier",u"type"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"deviceInfo",b"deviceInfo",u"displayName",b"displayName",u"identifier",b"identifier",u"type",b"type"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"deviceInfo",b"deviceInfo",u"displayName",b"displayName",u"identifier",b"identifier",u"type",b"type"]) -> None: ...
