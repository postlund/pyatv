# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pyatv/mrp/protobuf/VolumeControlAvailability.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pyatv.mrp.protobuf import ProtocolMessage_pb2 as pyatv_dot_mrp_dot_protobuf_dot_ProtocolMessage__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pyatv/mrp/protobuf/VolumeControlAvailability.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n2pyatv/mrp/protobuf/VolumeControlAvailability.proto\x1a(pyatv/mrp/protobuf/ProtocolMessage.proto\";\n\x19VolumeControlAvailability\x12\x1e\n\x16volumeControlAvailable\x18\x01 \x01(\x08:V\n volumeControlAvailabilityMessage\x12\x10.ProtocolMessage\x18\x16 \x01(\x0b\x32\x1a.VolumeControlAvailability')
  ,
  dependencies=[pyatv_dot_mrp_dot_protobuf_dot_ProtocolMessage__pb2.DESCRIPTOR,])


VOLUMECONTROLAVAILABILITYMESSAGE_FIELD_NUMBER = 22
volumeControlAvailabilityMessage = _descriptor.FieldDescriptor(
  name='volumeControlAvailabilityMessage', full_name='volumeControlAvailabilityMessage', index=0,
  number=22, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)


_VOLUMECONTROLAVAILABILITY = _descriptor.Descriptor(
  name='VolumeControlAvailability',
  full_name='VolumeControlAvailability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volumeControlAvailable', full_name='VolumeControlAvailability.volumeControlAvailable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=155,
)

DESCRIPTOR.message_types_by_name['VolumeControlAvailability'] = _VOLUMECONTROLAVAILABILITY
DESCRIPTOR.extensions_by_name['volumeControlAvailabilityMessage'] = volumeControlAvailabilityMessage
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

VolumeControlAvailability = _reflection.GeneratedProtocolMessageType('VolumeControlAvailability', (_message.Message,), dict(
  DESCRIPTOR = _VOLUMECONTROLAVAILABILITY,
  __module__ = 'pyatv.mrp.protobuf.VolumeControlAvailability_pb2'
  # @@protoc_insertion_point(class_scope:VolumeControlAvailability)
  ))
_sym_db.RegisterMessage(VolumeControlAvailability)

volumeControlAvailabilityMessage.message_type = _VOLUMECONTROLAVAILABILITY
pyatv_dot_mrp_dot_protobuf_dot_ProtocolMessage__pb2.ProtocolMessage.RegisterExtension(volumeControlAvailabilityMessage)

# @@protoc_insertion_point(module_scope)
