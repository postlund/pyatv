[tox]
envlist = clean, py{36,37,38,39}, docs, generated, codestyle, pylint, typing, report
skip_missing_interpreters = True
pysources = pyatv examples scripts
cs_exclude_words = cann,cant

[gh-actions]
python =
  3.6: clean, py36, docs, generated, codestyle, pylint, typing, report
  3.7: clean, py37, docs, generated, codestyle, pylint, typing, report
  3.8: clean, py38, docs, generated, codestyle, pylint, typing, report, regression
  3.9: clean, py39, docs, generated, codestyle, pylint, typing, report

[testenv]
usedevelop = True
passenv = TOXENV CI CODECOV_*
setenv =
    LANG=en_US.UTF-8
    PYTHONPATH = {toxinidir}/pyatv
install_command = python -m pip install {env:PIP_ARGS:} {opts} {packages}
depends =
    py{36,37,38,39}: clean generated
    report: py{36,37,38,39}
deps =
    -r{toxinidir}/requirements_test.txt
commands =
    pytest -n auto --log-level=debug -v --timeout=30 --durations=10 --cov --cov-append --cov-report=term-missing --cov-report=xml {posargs}

[testenv:regression]
deps =
    {[testenv]deps}
    -c base_versions.txt
commands =
    pytest -n auto --log-level=debug -v --timeout=30 --durations=10 {posargs}

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:docs]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements_docs.txt
commands =
    python scripts/api.py verify
    codespell -q 4 -L {[tox]cs_exclude_words} --skip="*.pyc,*.pyi,*~" {[tox]pysources} tests
    codespell -q 6 -L cann,cant -S "lib,vendor,_site,api,assets,*~,.sass-cache,*.lock" docs

[testenv:generated]
commands =
    python scripts/protobuf.py --download verify

[testenv:codestyle]
ignore_errors = True
commands =
    flake8 --exclude=pyatv/mrp/protobuf {[tox]pysources}
    black --fast --check .
    pydocstyle -v --match='(?!test_).*[^pb2]\.py' {[tox]pysources}
    isort -c --diff examples pyatv scripts tests

[testenv:pylint]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements_docs.txt
ignore_errors = True
setenv =
    PYTHONPATH = {toxinidir}
commands =
    pylint -j 0 examples
    pylint -j 0 pyatv
    pylint -j 0 scripts

[testenv:typing]
commands =
    mypy --ignore-missing-imports --follow-imports=skip pyatv

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html
